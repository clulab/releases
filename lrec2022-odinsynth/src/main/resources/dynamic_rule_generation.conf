odinsynth.evaluation.tacred.trainProcessed = "/data/nlp/corpora/odinsynth/data/TACRED/tacred/data/json/train_processed.json"
odinsynth.evaluation.tacred.devProcessed   = "/data/nlp/corpora/odinsynth/data/TACRED/tacred/data/json/dev_processed.json"

# The generated rules are saved here
odinsynth.evaluation.tacred.ruleBasepath = "/home/rvacareanu/projects/results/odinsynth_tacred5_current_dynamic/"

# Where to find the clusters
odinsynth.evaluation.tacred.clusterPath  = "/data/nlp/corpora/odinsynth/data/TACRED/odinsynth_tacred101/"
# odinsynth.evaluation.tacred.clusterPath  = "/data/nlp/corpora/odinsynth/data/TACRED/odinsynth_tacred4/0.no_relation/"

# How many steps to search for a solution
odinsynth.evaluation.tacred.steps = 1000

# Where to save/load the documents
odinsynth.evaluation.tacred.odinsonDocumentCache = "/home/rvacareanu/projects/odinsynth_cache/"

# Type of the scorer
odinsynth.evaluation.tacred.scorer = "DynamicWeightScorer"
# With reward or not
odinsynth.useReward = false

# Endpoint
odinsynth.evaluation.tacred.endpoint = "http://localhost:8000"

# Sharding info
# How many clusters to skip
odinsynth.evaluation.tacred.skipClusters = 0
# How many clusters to take
odinsynth.evaluation.tacred.takeClusters = 100