DU0-7: controller generated to many fact buffers. 
====================
input the index of the instance to check:7
facts:
  fact 1: the circuit has the switch.
  fact 2: the switch is on.
  fact 3: the circuit has the light bulb.
rules:
  rule 1: if the circuit has the switch and the switch is on then the circuit is complete.
  rule 2: if the circuit does not have the switch then the circuit is complete.
  rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing.
  rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing.
  rule 5: if the circuit is complete and the circuit has the radio then the radio is playing.
question and answer:
  the circuit does not have the bell.    True
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit does not have the bell".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the circuit does not have the bell". AND i want to judge whether the rules do not contradict "the circuit does not have the bell".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the circuit does not have the bell".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 2 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell". fact 1: the circuit has the switch. fact 2: the switch is on. fact 3: the circuit has the light bulb. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the circuit does not have the bell".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
pred: False  label: True
-----------------------

DU0-9: generated too many fact buffers. 
====================
input the index of the instance to check:9
facts:
  fact 1: the circuit has the switch.
  fact 2: the switch is on.
  fact 3: the circuit has the light bulb.
rules:
  rule 1: if the circuit has the switch and the switch is on then the circuit is complete.
  rule 2: if the circuit does not have the switch then the circuit is complete.
  rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing.
  rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing.
  rule 5: if the circuit is complete and the circuit has the radio then the radio is playing.
question and answer:
  the circuit does not have the radio.    True
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit does not have the radio".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the circuit does not have the radio". AND i want to judge whether the rules do not contradict "the circuit does not have the radio".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the circuit does not have the radio".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the circuit does not have the radio". AND i want to judge whether fact buffer 2 does not contradict "the circuit does not have the radio". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the radio". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the radio". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the radio". AND i want
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the radio".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the radio". fact 1: the circuit has the switch. fact 2: the switch is on. fact 3: the circuit has the light bulb. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the circuit does not have the radio".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
pred: False  label: True
-----------------------

DU0-17: generated too many fact buffers. 
====================
input the index of the instance to check:17
facts:
  fact 1: the circuit has the switch.
  fact 2: the switch is on.
  fact 3: the circuit has the radio.
rules:
  rule 1: if the circuit has the switch and the switch is on then the circuit is complete.
  rule 2: if the circuit does not have the switch then the circuit is complete.
  rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing.
  rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing.
  rule 5: if the circuit is complete and the circuit has the radio then the radio is playing.
question and answer:
  the circuit does not have the bell.    True
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit does not have the bell".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the circuit does not have the bell". AND i want to judge whether the rules do not contradict "the circuit does not have the bell".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the circuit does not have the bell".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 2 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the bell". AND i want
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the bell". fact 1: the circuit has the switch. fact 2: the switch is on. fact 3: the circuit has the radio. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the circuit does not have the bell".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
pred: False  label: True
-----------------------

DU0-173: generated too many fact buffers. 
====================
input the index of the instance to check:173
facts:
  fact 1: the circuit has the bell.
rules:
  rule 1: if the circuit has the switch and the switch is on then the circuit is complete.
  rule 2: if the circuit does not have the switch then the circuit is complete.
  rule 3: if the circuit is complete then the current runs through the circuit.
  rule 4: if the current runs through the circuit and the circuit has the light bulb then the light bulb is glowing.
  rule 5: if the current runs through the circuit and the circuit has the bell then the bell is ringing.
  rule 6: if the current runs through the circuit and the circuit has the radio then the radio is playing.
question and answer:
  the circuit does not have the light bulb.    True
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit does not have the light bulb".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the circuit does not have the light bulb". AND i want to judge whether the rules do not contradict "the circuit does not have the light bulb".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the circuit does not have the light bulb".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the circuit does not have the light bulb". AND i want to judge whether fact buffer 2 does not contradict "the circuit does not have the light bulb". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the light bulb". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the light bulb". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not have the light bulb
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the light bulb".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not have the light bulb". fact 1: the circuit has the bell. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the circuit does not have the light bulb".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
pred: False  label: True
-----------------------


DU2-4: generated too many fact buffers. 
====================
input the index of the instance to check:4
facts:
  fact 1: the circuit has the bell.
rules:
  rule 1: if the circuit has the switch and the switch is on then the circuit is complete.
  rule 2: if the circuit does not have the switch then the circuit is complete.
  rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing.
  rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing.
  rule 5: if the circuit is complete and the circuit has the radio then the radio is playing.
question and answer:
  the bell is ringing.    True
/home/u15/zhengzhongliang/anaconda3/envs/t5/lib/python3.6/site-packages/transformers/tokenization_t5.py:184: UserWarning: This sequence already has </s>. In future versions this behavior may lead to duplicated eos tokens being added.
  f"This sequence already has {self.eos_token}. In future versions this behavior may lead to duplicated eos tokens being added."
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the bell is ringing".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts can prove "the bell is ringing". OR i want to judge whether the rules can prove "the bell is ringing".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts can prove "the bell is ringing".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 can prove "the bell is ringing". OR i want to judge whether fact buffer 2 can prove "the bell is ringing". OR i want to judge whether fact buffer 3 can prove "the bell is ringing". OR i want to judge whether fact buffer 3 can prove "the bell is ringing". OR i want to judge whether fact buffer 3 can prove "the bell is ringing".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 can prove "the bell is ringing".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 can prove "the bell is ringing". fact 1: the circuit has the bell. operator: RUN  </s>
  generated answer:false, CWA.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 can prove "the bell is ringing".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the bell is ringing".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the bell is ringing".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the bell is ringing".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the rules can prove "the bell is ringing".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether rule buffer 1 can prove "the bell is ringing". OR i want to judge whether rule buffer 2 can prove "the bell is ringing".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 1 can prove "the bell is ringing".']
  generated operation: GET( RULE_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 1 can prove "the bell is ringing". rule 1: if the circuit has the switch and the switch is on then the circuit is complete. rule 2: if the circuit does not have the switch then the circuit is complete. rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing. operator: RUN  </s>
  generated answer:false
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 2 can prove "the bell is ringing".']
  generated operation: GET( RULE_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_2 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 2 can prove "the bell is ringing". rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing. rule 5: if the circuit is complete and the circuit has the radio then the radio is playing. operator: RUN  </s>
  generated answer:according to rule 4, i need to prove the circuit is complete and the circuit has the bell.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: according to rule 4, i need to prove the circuit is complete and the circuit has the bell.']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to prove "the circuit is complete". AND i want to prove "the circuit has the bell".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit is complete".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts can prove "the circuit is complete". OR i want to judge whether the rules can prove "the circuit is complete".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts can prove "the circuit is complete".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 can prove "the circuit is complete". OR i want to judge whether fact buffer 2 can prove "the circuit is complete". OR i want to judge whether fact buffer 3 can prove "the circuit is complete". OR i want to judge whether fact buffer 3 can prove "the circuit is complete".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 can prove "the circuit is complete".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 can prove "the circuit is complete". fact 1: the circuit has the bell. operator: RUN  </s>
  generated answer:false, CWA.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 can prove "the circuit is complete".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the circuit is complete".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the circuit is complete".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the rules can prove "the circuit is complete".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether rule buffer 1 can prove "the circuit is complete". OR i want to judge whether rule buffer 2 can prove "the circuit is complete".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 1 can prove "the circuit is complete".']
  generated operation: GET( RULE_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 1 can prove "the circuit is complete". rule 1: if the circuit has the switch and the switch is on then the circuit is complete. rule 2: if the circuit does not have the switch then the circuit is complete. rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing. operator: RUN  </s>
  generated answer:according to rule 1, i need to prove the circuit has the switch and the switch is on or according to rule 2, i need to prove the circuit does not has the switch.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: according to rule 1, i need to prove the circuit has the switch and the switch is on or according to rule 2, i need to prove the circuit does not has the switch.']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to prove "the circuit has the switch". AND i want to prove "the switch is on". OR i want to prove "the circuit does not has the switch".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit has the switch".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts can prove "the circuit has the switch". OR i want to judge whether the rules can prove "the circuit has the switch".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts can prove "the circuit has the switch".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 can prove "the circuit has the switch". OR i want to judge whether fact buffer 2 can prove "the circuit has the switch". OR i want to judge whether fact buffer 3 can prove "the circuit has the switch". OR i want to judge whether fact buffer 3 can prove "the circuit has the switch". OR i want to judge whether fact buffer 3 can prove "the circuit has the switch".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 can prove "the circuit has the switch".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 can prove "the circuit has the switch". fact 1: the circuit has the bell. operator: RUN  </s>
  generated answer:false, CWA.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 can prove "the circuit has the switch".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the circuit has the switch".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the circuit has the switch".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 3 can prove "the circuit has the switch".']
  generated operation: GET( FACT_BUFFER_3 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_3 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the rules can prove "the circuit has the switch".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether rule buffer 1 can prove "the circuit has the switch". OR i want to judge whether rule buffer 2 can prove "the circuit has the switch".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 1 can prove "the circuit has the switch".']
  generated operation: GET( RULE_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 1 can prove "the circuit has the switch". rule 1: if the circuit has the switch and the switch is on then the circuit is complete. rule 2: if the circuit does not have the switch then the circuit is complete. rule 3: if the circuit is complete and the circuit has the light bulb then the light bulb is glowing. operator: RUN  </s>
  generated answer:false
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 2 can prove "the circuit has the switch".']
  generated operation: GET( RULE_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_2 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 2 can prove "the circuit has the switch". rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing. rule 5: if the circuit is complete and the circuit has the radio then the radio is playing. operator: RUN  </s>
  generated answer:false
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to prove "the circuit does not has the switch".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the circuit does not has the switch". AND i want to judge whether the rules do not contradict "the circuit does not has the switch".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the circuit does not has the switch".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the circuit does not has the switch". AND i want to judge whether fact buffer 2 does not contradict "the circuit does not has the switch". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not has the switch". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not has the switch". AND i want to judge whether fact buffer 3 does not contradict "the circuit does not has the switch". AND i want
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not has the switch".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the circuit does not has the switch". fact 1: the circuit has the bell. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the circuit does not has the switch".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 2 rule buffers.', 'episodic buffer: i want to judge whether rule buffer 2 can prove "the circuit is complete".']
  generated operation: GET( RULE_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, RULE_BUFFER_2 )
  buffer input:episodic buffer: there are 1 fact buffers and 2 rule buffers. episodic buffer: i want to judge whether rule buffer 2 can prove "the circuit is complete". rule 4: if the circuit is complete and the circuit has the bell then the bell is ringing. rule 5: if the circuit is complete and the circuit has the radio then the radio is playing. operator: RUN  </s>
  generated answer:false
pred: False  label: True
-----------------------

DU2-371: generated too many fact buffers. 
====================
input the index of the instance to check:371
facts:
  fact 1: the circuit includes the battery.
  fact 2: the battery is flat.
  fact 3: the circuit includes the switch.
  fact 4: the wire is metal.
  fact 5: the circuit includes the bell.
rules:
  rule 1: if the circuit includes the battery and the battery is not flat then the circuit is powered.
  rule 2: if the circuit includes the switch and the switch is on then the circuit is complete.
  rule 3: if the circuit does not include the switch then the circuit is complete.
  rule 4: if the wire is metal then the wire is conducting.
  rule 5: if the wire is plastic then the wire is not conducting.
  rule 6: if the circuit is powered and the circuit is complete and the wire is conducting then the current runs through the circuit.
  rule 7: if the current runs through the circuit and the circuit includes the light bulb then the current runs through the light bulb.
  rule 8: if the current runs through the circuit and the circuit includes the bell then the current runs through the bell.
  rule 9: if the current runs through the circuit and the circuit includes the radio then the current runs through the radio.
  rule 10: if the current runs through the light bulb then the light bulb is glowing.
  rule 11: if the current runs through the bell then the bell is ringing.
  rule 12: if the current runs through the radio then the radio is playing.
question and answer:
  the radio is not playing.    True
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 4 rule buffers.', 'episodic buffer: i want to prove "the radio is not playing".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether the facts do not contradict "the radio is not playing". AND i want to judge whether the rules do not contradict "the radio is not playing".
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 4 rule buffers.', 'episodic buffer: i want to judge whether the facts do not contradict "the radio is not playing".']
  generated operation:  GENERATE_SUBGOALS 
  generated subgoal:i want to judge whether fact buffer 1 does not contradict "the radio is not playing". AND i want to judge whether fact buffer 2 does not contradict "the radio is not playing". AND i want to judge whether fact buffer 3 does not contradict "the radio is not playing". AND i want to judge whether fact buffer 3 does not contradict "the radio is not playing". AND i want to judge whether fact buffer 3 does not contradict "the radio is not playing". AND i want to judge whether fact buffer 3 does not contradict "the radio
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 4 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 1 does not contradict "the radio is not playing".']
  generated operation: GET( FACT_BUFFER_1 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_1 )
  buffer input:episodic buffer: there are 1 fact buffers and 4 rule buffers. episodic buffer: i want to judge whether fact buffer 1 does not contradict "the radio is not playing". fact 1: the circuit includes the battery. fact 2: the battery is flat. fact 3: the circuit includes the switch. fact 4: the wire is metal. fact 5: the circuit includes the bell. operator: RUN  </s>
  generated answer:true, NAF.
  --------------------
  episodic buffer ['episodic buffer: there are 1 fact buffers and 4 rule buffers.', 'episodic buffer: i want to judge whether fact buffer 2 does not contradict "the radio is not playing".']
  generated operation: GET( FACT_BUFFER_2 ) THEN RUN ( EPISODIC_BUFFER, FACT_BUFFER_2 )
pred: False  label: True
-----------------------